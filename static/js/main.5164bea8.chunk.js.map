{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","classnames","title","type","onClick","TodoFilter","setFilteredTodos","useState","query","setQuery","currentFilter","setcurrentFilter","toLowerCase","filterTodos","filter","includes","useMemo","value","onChange","event","preventDefault","target","filterTodo","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","userID","setUsers","isOpen","setisOpen","user","a","userId","href","email","name","App","setTodos","todoId","setTodoId","filteredTodos","selectedTodo","find","x","todoID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5164bea8.chunk.js","sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todoId: number) => void;\n  selectedTodoId: number;\n};\n// {todo.completed === true &&}\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo, selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td>\n            {todo.completed && (\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered\" />\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classnames(\n              'has-text-danger', {\n                'has-text-green': todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodoId === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button is-link\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(0);\n                }}\n\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  selectTodo(todo.id);\n                }}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useState, useMemo } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  setFilteredTodos: (value: React.SetStateAction<Todo[]>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  todos, setFilteredTodos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [currentFilter, setcurrentFilter] = useState('all');\n\n  const toLowerCase = query.toLowerCase();\n\n  const filterTodos = todos\n    .filter(todo => todo.title.toLowerCase()\n      .includes(toLowerCase));\n\n  const setter = (() => {\n    setFilteredTodos(filterTodos);\n  });\n\n  useMemo(setter, [todos, query]);\n\n  // const handleAll = todos;\n\n  // const handleActive = todos.filter(todo => !todo.completed);\n\n  // const handleCompleted = todos.filter(todo => todo.completed);\n\n  const filterTodo = (filter: string) => {\n    switch (filter) {\n      case 'all':\n        setcurrentFilter(filter);\n\n        return setFilteredTodos(todos);\n      case 'active':\n        setcurrentFilter(filter);\n\n        return setFilteredTodos(todos.filter(todo => !todo.completed));\n      case 'completed':\n        setcurrentFilter(filter);\n\n        return setFilteredTodos(todos.filter(todo => todo.completed));\n      default:\n        return 0;\n    }\n  };\n\n  const Handle = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    event.preventDefault();\n\n    const { value } = event.target;\n    const filter = useMemo(() => filterTodo(value), [todos]);\n\n    return filter;\n  };\n  /* const handle = () => {\n    const s = () => setFilteredTodos(handleActive);\n    useMemo(s, [todos]);\n  }; */\n\n  const reset = () => {\n    setQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={currentFilter}\n            onChange={Handle}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={reset}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState } from 'react';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo }) => {\n  const [userID, setUsers] = useState(0);\n  const [isOpen, setisOpen] = useState(false);\n\n  const user = async () => {\n    setUsers(todo.userId);\n    getUser(userID);\n  };\n\n  return (isOpen) ? (\n    null\n  ) : (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(todo.user === null && user) ? (\n        <Loader />\n      ) : (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setisOpen(true);\n                setUsers(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done </strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${todo.user?.email}`}>\n                {todo.user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n\n  getTodos().then(todo => setTodos(todo));\n\n  const selectedTodo = todos.find(x => x.id === todoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                todos={todos}\n                setFilteredTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              <Loader />\n\n              <TodoList\n                todos={filteredTodos}\n                selectedTodoId={todoId}\n                selectTodo={(todoID) => {\n                  setTodoId(todoID);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal todo={selectedTodo} />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}