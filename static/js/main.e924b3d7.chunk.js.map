{"version":3,"sources":["types/Todo.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoFilterBy","TodoList","todos","selectTodo","selectedTodoId","className","map","todo","id","completed","classnames","title","type","onClick","TodoFilter","setFilter","setQuery","filter","query","value","onChange","target","NONE","ACTIVE","COMPLETED","placeholder","event","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","isOpen","setisOpen","user","setUser","init","a","userId","userss","useEffect","href","name","App","setTodos","todoId","setTodoId","isLoading","setisLoading","toLowerCase","filteredList","includes","selectedTodo","find","x","todoID","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e924b3d7.chunk.js","sourcesContent":["import { User } from './User';\n\nexport interface Todo {\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n  user: User;\n}\n\nexport enum TodoFilterBy {\n  NONE = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectTodo: (todoId: number) => void;\n  selectedTodoId: number;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, selectTodo, selectedTodoId,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td>\n            {todo.completed && (\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered\" />\n\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classnames(\n              {\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              },\n            )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            {selectedTodoId === todo.id ? (\n              <button\n                data-cy=\"selectButton\"\n                className=\"button is-link\"\n                type=\"button\"\n                onClick={() => {\n                  selectTodo(0);\n                }}\n\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye-slash\" />\n                </span>\n              </button>\n            ) : (\n              <button\n                onClick={() => {\n                  selectTodo(todo.id);\n                }}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className=\"far fa-eye\" />\n                </span>\n              </button>\n            )}\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { TodoFilterBy } from '../../types/Todo';\n\ntype Props = {\n  setFilter:(newFilter: TodoFilterBy) => void,\n  setQuery:(query: string) => void,\n  filter: string,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilter, setQuery, filter, query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={\n              ({ target }) => setFilter(target.value as TodoFilterBy)\n            }\n          >\n            <option value={TodoFilterBy.NONE}>All</option>\n            <option value={TodoFilterBy.ACTIVE}>Active</option>\n            <option value={TodoFilterBy.COMPLETED}>\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        { query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect, SetStateAction } from 'react';\n\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  selectTodo: (todoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, selectTodo }) => {\n  const [isOpen, setisOpen] = useState(false);\n  const [user, setUser] = useState<SetStateAction<User>>();\n\n  const init = async () => {\n    const userss = await getUser(todo.userId);\n\n    setUser(userss);\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n\n  return (isOpen && init) ? (\n    <Loader />\n  ) : (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {(!user) ? (\n        <Loader />\n      ) : (\n\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                setisOpen(true);\n                selectTodo(0);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done </strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.name}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\n\nimport { Loader } from './components/Loader';\nimport { Todo, TodoFilterBy } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todoId, setTodoId] = useState(0);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(TodoFilterBy.NONE);\n  const [isLoading, setisLoading] = useState(true);\n\n  const toLowerCase = query.toLowerCase();\n\n  const filteredList = todos.filter(todo => todo.title.toLowerCase()\n    .includes(toLowerCase)).filter(todo => {\n    switch (filter) {\n      case TodoFilterBy.ACTIVE:\n        return !todo.completed;\n      case TodoFilterBy.COMPLETED:\n        return todo.completed;\n      default:\n        return todo;\n    }\n  });\n\n  useEffect(() => {\n    getTodos()\n      .then(todo => setTodos(todo))\n      .then(() => setisLoading(false));\n  }, []);\n\n  const selectedTodo = todos.find(x => x.id === todoId);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilter={setFilter}\n                setQuery={setQuery}\n                filter={filter}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n\n              <TodoList\n                todos={filteredList}\n                selectedTodoId={todoId}\n                selectTodo={(todoID) => {\n                  setTodoId(todoID);\n                }}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          selectTodo={(todoID) => {\n            setTodoId(todoID);\n          }}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}